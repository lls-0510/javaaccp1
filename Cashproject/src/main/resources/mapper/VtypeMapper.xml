<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.accp.mapper.VtypeMapper" >
  <resultMap id="BaseResultMap" type="com.accp.domain.Vtype" >
    <id column="VTid" property="vtid" jdbcType="INTEGER" />
    <result column="VTname" property="vtname" jdbcType="VARCHAR" />
    <result column="VtDiscount" property="vtdiscount" jdbcType="REAL" />
    <result column="vrule" property="vrule" jdbcType="INTEGER" />
    <result column="maxmoney" property="maxmoney" jdbcType="DOUBLE" />
    <result column="validityData" property="validitydata" jdbcType="INTEGER" />
    <result column="bz1" property="bz1" jdbcType="VARCHAR" />
    <result column="bz2" property="bz2" jdbcType="VARCHAR" />
    <result column="bz3" property="bz3" jdbcType="VARCHAR" />
    <result column="bz4" property="bz4" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    VTid, VTname, VtDiscount, vrule, maxmoney, validityData, bz1, bz2, bz3, bz4
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.accp.domain.VtypeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from vtype
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from vtype
    where VTid = #{vtid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from vtype
    where VTid = #{vtid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.accp.domain.VtypeExample" >
    delete from vtype
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.accp.domain.Vtype" >
    insert into vtype (VTid, VTname, VtDiscount, 
      vrule, maxmoney, validityData, 
      bz1, bz2, bz3, bz4
      )
    values (#{vtid,jdbcType=INTEGER}, #{vtname,jdbcType=VARCHAR}, #{vtdiscount,jdbcType=REAL}, 
      #{vrule,jdbcType=INTEGER}, #{maxmoney,jdbcType=DOUBLE}, #{validitydata,jdbcType=INTEGER}, 
      #{bz1,jdbcType=VARCHAR}, #{bz2,jdbcType=VARCHAR}, #{bz3,jdbcType=VARCHAR}, #{bz4,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.accp.domain.Vtype" >
    insert into vtype
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="vtid != null" >
        VTid,
      </if>
      <if test="vtname != null" >
        VTname,
      </if>
      <if test="vtdiscount != null" >
        VtDiscount,
      </if>
      <if test="vrule != null" >
        vrule,
      </if>
      <if test="maxmoney != null" >
        maxmoney,
      </if>
      <if test="validitydata != null" >
        validityData,
      </if>
      <if test="bz1 != null" >
        bz1,
      </if>
      <if test="bz2 != null" >
        bz2,
      </if>
      <if test="bz3 != null" >
        bz3,
      </if>
      <if test="bz4 != null" >
        bz4,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="vtid != null" >
        #{vtid,jdbcType=INTEGER},
      </if>
      <if test="vtname != null" >
        #{vtname,jdbcType=VARCHAR},
      </if>
      <if test="vtdiscount != null" >
        #{vtdiscount,jdbcType=REAL},
      </if>
      <if test="vrule != null" >
        #{vrule,jdbcType=INTEGER},
      </if>
      <if test="maxmoney != null" >
        #{maxmoney,jdbcType=DOUBLE},
      </if>
      <if test="validitydata != null" >
        #{validitydata,jdbcType=INTEGER},
      </if>
      <if test="bz1 != null" >
        #{bz1,jdbcType=VARCHAR},
      </if>
      <if test="bz2 != null" >
        #{bz2,jdbcType=VARCHAR},
      </if>
      <if test="bz3 != null" >
        #{bz3,jdbcType=VARCHAR},
      </if>
      <if test="bz4 != null" >
        #{bz4,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.VtypeExample" resultType="java.lang.Integer" >
    select count(*) from vtype
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update vtype
    <set >
      <if test="record.vtid != null" >
        VTid = #{record.vtid,jdbcType=INTEGER},
      </if>
      <if test="record.vtname != null" >
        VTname = #{record.vtname,jdbcType=VARCHAR},
      </if>
      <if test="record.vtdiscount != null" >
        VtDiscount = #{record.vtdiscount,jdbcType=REAL},
      </if>
      <if test="record.vrule != null" >
        vrule = #{record.vrule,jdbcType=INTEGER},
      </if>
      <if test="record.maxmoney != null" >
        maxmoney = #{record.maxmoney,jdbcType=DOUBLE},
      </if>
      <if test="record.validitydata != null" >
        validityData = #{record.validitydata,jdbcType=INTEGER},
      </if>
      <if test="record.bz1 != null" >
        bz1 = #{record.bz1,jdbcType=VARCHAR},
      </if>
      <if test="record.bz2 != null" >
        bz2 = #{record.bz2,jdbcType=VARCHAR},
      </if>
      <if test="record.bz3 != null" >
        bz3 = #{record.bz3,jdbcType=VARCHAR},
      </if>
      <if test="record.bz4 != null" >
        bz4 = #{record.bz4,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update vtype
    set VTid = #{record.vtid,jdbcType=INTEGER},
      VTname = #{record.vtname,jdbcType=VARCHAR},
      VtDiscount = #{record.vtdiscount,jdbcType=REAL},
      vrule = #{record.vrule,jdbcType=INTEGER},
      maxmoney = #{record.maxmoney,jdbcType=DOUBLE},
      validityData = #{record.validitydata,jdbcType=INTEGER},
      bz1 = #{record.bz1,jdbcType=VARCHAR},
      bz2 = #{record.bz2,jdbcType=VARCHAR},
      bz3 = #{record.bz3,jdbcType=VARCHAR},
      bz4 = #{record.bz4,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.accp.domain.Vtype" >
    update vtype
    <set >
      <if test="vtname != null" >
        VTname = #{vtname,jdbcType=VARCHAR},
      </if>
      <if test="vtdiscount != null" >
        VtDiscount = #{vtdiscount,jdbcType=REAL},
      </if>
      <if test="vrule != null" >
        vrule = #{vrule,jdbcType=INTEGER},
      </if>
      <if test="maxmoney != null" >
        maxmoney = #{maxmoney,jdbcType=DOUBLE},
      </if>
      <if test="validitydata != null" >
        validityData = #{validitydata,jdbcType=INTEGER},
      </if>
      <if test="bz1 != null" >
        bz1 = #{bz1,jdbcType=VARCHAR},
      </if>
      <if test="bz2 != null" >
        bz2 = #{bz2,jdbcType=VARCHAR},
      </if>
      <if test="bz3 != null" >
        bz3 = #{bz3,jdbcType=VARCHAR},
      </if>
      <if test="bz4 != null" >
        bz4 = #{bz4,jdbcType=VARCHAR},
      </if>
    </set>
    where VTid = #{vtid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accp.domain.Vtype" >
    update vtype
    set VTname = #{vtname,jdbcType=VARCHAR},
      VtDiscount = #{vtdiscount,jdbcType=REAL},
      vrule = #{vrule,jdbcType=INTEGER},
      maxmoney = #{maxmoney,jdbcType=DOUBLE},
      validityData = #{validitydata,jdbcType=INTEGER},
      bz1 = #{bz1,jdbcType=VARCHAR},
      bz2 = #{bz2,jdbcType=VARCHAR},
      bz3 = #{bz3,jdbcType=VARCHAR},
      bz4 = #{bz4,jdbcType=VARCHAR}
    where VTid = #{vtid,jdbcType=INTEGER}
  </update>
</mapper>